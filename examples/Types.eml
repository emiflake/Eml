begin Types

true : Bool
true = (eval "true")

false : Bool
false = (eval "false")

eq : Num -> Num -> Bool
eq = (eval "x=>y=>x==y")

mod : Num -> Num -> Num
mod = (eval "x=>y=>x%y")

show : forall a. a -> String
show = (eval "x=>x.toString()")

concat : String -> String -> String
concat = (eval "x=>y=>x+y")

log : String -> Unit
log = (eval "x=>console.log(x)")

not : Bool -> Bool
not = (eval "x=>!x")

showBool = \x. if x then "True" else "False"

greet = \name. (concat "Hello, " name)

identity : a -> a
identity = \x. x

triangle = \x. if (eq x 1) then x else (x + (triangle (x - 1)))

divides : Num -> Num -> Bool
divides = \a b. (eq (mod a b) 0)

main = \_.
  (log (show (triangle 10)))

applyTwice : (a -> b) -> a -> b
applyTwice = \f x. (f (f x))
